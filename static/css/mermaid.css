:root {
    --node-fill: #ECECFF;
    --node-border: #CCCCFF;
    --cluster-fill: #ffffde;
    --cluster-border: #aaaa33;
    --note-fill: #fff5ad;
    --note-border: #aaaa33;
    --mermaid-color: var(--text-color);
}

/* Flowchart variables */
/* Sequence Diagram variables */
/* Gantt chart variables */
/* state colors */
.label {
    font-family: var(--mermaid-font-family);
    color: #333;
}

.label text {
    fill: #333;
}

.node rect,
.node circle,
.node ellipse,
.node polygon {
    fill: var(--node-fill);
    stroke: #9370DB;
    stroke-width: 1px;
}

.node .label {
    text-align: center;
}

.node.clickable {
    cursor: pointer;
}

.arrowheadPath {
    fill: var(--text-color);
}

.edgePath .path {
    stroke: var(--text-color);
    stroke-width: 1.5px;
}

.edgeLabel {
    background-color: #e8e8e8;
    text-align: center;
}

.cluster rect {
    fill: var(--cluster-fill);
    stroke: var(--cluster-border);
    stroke-width: 1px;
}

.cluster text {
    fill: var(--text-color);
}

div.mermaidTooltip {
    position: absolute;
    text-align: center;
    max-width: 200px;
    padding: 2px;

    font-family: var(--mermaid-font-family);
    font-size: 12px;
    background: var(--cluster-fill);
    border: 1px solid var(--cluster-border);
    border-radius: 2px;
    pointer-events: none;
    z-index: 100;
}

.actor {
    stroke: var(--node-border);
    fill: var(--node-fill);
}

text.actor {
    fill: black;
    stroke: none;
}

.actor-line {
    stroke: grey;
}

.messageLine0 {
    stroke-width: 1.5;
    stroke-dasharray: '2 2';
    stroke: var(--text-color);
}

.messageLine1 {
    stroke-width: 1.5;
    stroke-dasharray: '2 2';
    stroke: var(--text-color);
}

#arrowhead {
    fill: var(--text-color);
}

.sequenceNumber {
    fill: white;
}

#sequencenumber {
    fill: var(--text-color);
}

#crosshead path {
    fill: var(--text-color) !important;
    stroke: var(--text-color) !important;
}

.messageText {
    fill: var(--text-color);
    stroke: none;
}

.labelBox {
    stroke: var(--node-border);
    fill: var(--node-fill);
}

.labelText {
    fill: black;
    stroke: none;
}

.loopText {
    fill: black;
    stroke: none;
}

.loopLine {
    stroke-width: 2;
    stroke-dasharray: '2 2';
    stroke: var(--node-border);
}

.note {
    stroke: var(--cluster-border);
    fill: #fff5ad;
}

.noteText {
    fill: black;
    stroke: none;

    font-family: var(--mermaid-font-family);
    font-size: 14px;
}

.activation0 {
    fill: #f4f4f4;
    stroke: #666;
}

.activation1 {
    fill: #f4f4f4;
    stroke: #666;
}

.activation2 {
    fill: #f4f4f4;
    stroke: #666;
}

/** Section styling */
.mermaid-main-font {
    font-family: "trebuchet ms", verdana, arial;
    font-family: var(--mermaid-font-family);
}

.section {
    stroke: none;
    opacity: 0.2;
}

.section0 {
    fill: rgba(102, 102, 255, 0.49);
}

.section2 {
    fill: #fff400;
}

.section1,
.section3 {
    fill: white;
    opacity: 0.2;
}

.sectionTitle0 {
    fill: var(--text-color);
}

.sectionTitle1 {
    fill: var(--text-color);
}

.sectionTitle2 {
    fill: var(--text-color);
}

.sectionTitle3 {
    fill: var(--text-color);
}

.sectionTitle {
    text-anchor: start;
    font-size: 11px;
    text-height: 14px;

    font-family: var(--mermaid-font-family);
}

/* Grid and axis */
.grid .tick {
    stroke: lightgrey;
    opacity: 0.3;
    shape-rendering: crispEdges;
}

.grid .tick text {

    font-family: var(--mermaid-font-family);
}

.grid path {
    stroke-width: 0;
}

/* Today line */
.today {
    fill: none;
    stroke: red;
    stroke-width: 2px;
}

/* Task styling */
/* Default task */
.task {
    stroke-width: 2;
}

.taskText {
    text-anchor: middle;

    font-family: var(--mermaid-font-family);
}

.taskText:not([font-size]) {
    font-size: 11px;
}

.taskTextOutsideRight {
    fill: black;
    text-anchor: start;
    font-size: 11px;

    font-family: var(--mermaid-font-family);
}

.taskTextOutsideLeft {
    fill: black;
    text-anchor: end;
    font-size: 11px;
}

/* Special case clickable */
.task.clickable {
    cursor: pointer;
}

.taskText.clickable {
    cursor: pointer;
    fill: #003163 !important;
    font-weight: bold;
}

.taskTextOutsideLeft.clickable {
    cursor: pointer;
    fill: #003163 !important;
    font-weight: bold;
}

.taskTextOutsideRight.clickable {
    cursor: pointer;
    fill: #003163 !important;
    font-weight: bold;
}

/* Specific task settings for the sections*/
.taskText0,
.taskText1,
.taskText2,
.taskText3 {
    fill: white;
}

.task0,
.task1,
.task2,
.task3 {
    fill: #8a90dd;
    stroke: #534fbc;
}

.taskTextOutside0,
.taskTextOutside2 {
    fill: black;
}

.taskTextOutside1,
.taskTextOutside3 {
    fill: black;
}

/* Active task */
.active0,
.active1,
.active2,
.active3 {
    fill: #bfc7ff;
    stroke: #534fbc;
}

.activeText0,
.activeText1,
.activeText2,
.activeText3 {
    fill: black !important;
}

/* Completed task */
.done0,
.done1,
.done2,
.done3 {
    stroke: grey;
    fill: lightgrey;
    stroke-width: 2;
}

.doneText0,
.doneText1,
.doneText2,
.doneText3 {
    fill: black !important;
}

/* Tasks on the critical line */
.crit0,
.crit1,
.crit2,
.crit3 {
    stroke: #ff8888;
    fill: red;
    stroke-width: 2;
}

.activeCrit0,
.activeCrit1,
.activeCrit2,
.activeCrit3 {
    stroke: #ff8888;
    fill: #bfc7ff;
    stroke-width: 2;
}

.doneCrit0,
.doneCrit1,
.doneCrit2,
.doneCrit3 {
    stroke: #ff8888;
    fill: lightgrey;
    stroke-width: 2;
    cursor: pointer;
    shape-rendering: crispEdges;
}

.milestone {
    transform: rotate(45deg) scale(0.8, 0.8);
}

.milestoneText {
    font-style: italic;
}

.doneCritText0,
.doneCritText1,
.doneCritText2,
.doneCritText3 {
    fill: black !important;
}

.activeCritText0,
.activeCritText1,
.activeCritText2,
.activeCritText3 {
    fill: black !important;
}

.titleText {
    text-anchor: middle;
    font-size: 18px;
    fill: black;

    font-family: var(--mermaid-font-family);
}

g.classGroup text {
    fill: #9370DB;
    stroke: none;

    font-family: var(--mermaid-font-family);
    font-size: 10px;
}

g.classGroup text .title {
    font-weight: bolder;
}

g.classGroup rect {
    fill: var(--node-fill);
    stroke: #9370DB;
}

g.classGroup line {
    stroke: #9370DB;
    stroke-width: 1;
}

.classLabel .box {
    stroke: none;
    stroke-width: 0;
    fill: var(--node-fill);
    opacity: 0.5;
}

.classLabel .label {
    fill: #9370DB;
    font-size: 10px;
}

.relation {
    stroke: #9370DB;
    stroke-width: 1;
    fill: none;
}

#compositionStart {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

#compositionEnd {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

#aggregationStart {
    fill: var(--node-fill);
    stroke: #9370DB;
    stroke-width: 1;
}

#aggregationEnd {
    fill: var(--node-fill);
    stroke: #9370DB;
    stroke-width: 1;
}

#dependencyStart {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

#dependencyEnd {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

#extensionStart {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

#extensionEnd {
    fill: #9370DB;
    stroke: #9370DB;
    stroke-width: 1;
}

.commit-id,
.commit-msg,
.branch-label {
    fill: lightgrey;
    color: lightgrey;

    font-family: var(--mermaid-font-family);
}

.pieTitleText {
    text-anchor: middle;
    font-size: 25px;
    fill: var(--text-color);

    font-family: var(--mermaid-font-family);
}

.slice {

    font-family: var(--mermaid-font-family);
}

g.stateGroup text {
    fill: #9370DB;
    stroke: none;
    font-size: 10px;

    font-family: var(--mermaid-font-family);
}

g.stateGroup text {
    fill: #9370DB;
    stroke: none;
    font-size: 10px;
}

g.stateGroup .state-title {
    font-weight: bolder;
    fill: black;
}

g.stateGroup rect {
    fill: var(--node-fill);
    stroke: #9370DB;
}

g.stateGroup line {
    stroke: #9370DB;
    stroke-width: 1;
}

.transition {
    stroke: #9370DB;
    stroke-width: 1;
    fill: none;
}

.stateGroup .composit {
    fill: white;
    border-bottom: 1px;
}

.state-note {
    stroke: var(--cluster-border);
    fill: #fff5ad;
}

.state-note text {
    fill: black;
    stroke: none;
    font-size: 10px;
}

.stateLabel .box {
    stroke: none;
    stroke-width: 0;
    fill: var(--node-fill);
    opacity: 0.5;
}

.stateLabel text {
    fill: black;
    font-size: 10px;
    font-weight: bold;
    font-family: var(--mermaid-font-family);
}

.statediagram-cluster rect {
    fill: var(--node-fill);
    stroke: #9370DB;
    stroke-width: 1px;
}

.statediagram-cluster rect.outer {
    rx: 5px;
    ry: 5px;
}

.statediagram-state .divider {
    stroke: #9370DB;
}

.statediagram-state .title-state {
    rx: 5px;
    ry: 5px;
}

.statediagram-cluster.statediagram-cluster .inner {
    fill: white;
}

.statediagram-cluster.statediagram-cluster-alt .inner {
    fill: #e0e0e0;
}

.statediagram-cluster .inner {
    rx: 0;
    ry: 0;
}

.statediagram-state rect.basic {
    rx: 5px;
    ry: 5px;
}

.statediagram-state rect.divider {
    stroke-dasharray: 10, 10;
    fill: #efefef;
}

.note-edge {
    stroke-dasharray: 5;
}

.statediagram-note rect {
    stroke: var(--cluster-border);
    fill: #fff5ad;
    stroke-width: 1px;
    rx: 0;
    ry: 0;
}

.node circle.state-start {
    fill: black;
    stroke: black;
}

.node circle.state-end {
    fill: black;
    stroke: white;
    stroke-width: 1.5
}

#statediagram-barbEnd {
    fill: #9370DB;
}

/*


*/
.node text {
    font-size: 14px;
}

div.mermaidTooltip {
    position: absolute;
    text-align: center;
    max-width: 200px;
    padding: 2px;

    font-family: var(--mermaid-font-family);
    font-size: 12px;
    background: var(--cluster-fill);
    border: 1px solid var(--cluster-border);
    border-radius: 2px;
    pointer-events: none;
    z-index: 100;
}

#write .md-diagram-panel .md-diagram-panel-preview div {
    width: initial;
}
